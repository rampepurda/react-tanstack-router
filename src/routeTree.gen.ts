/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PostsDataRouteImport } from './routes/postsData'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PostsPageIndexRouteImport } from './routes/postsPage/index'
import { Route as PostsPagePostIdRouteImport } from './routes/postsPage/$postId'
import { Route as PostsDataIdRouteImport } from './routes/postsData/$id'

const PostsDataRoute = PostsDataRouteImport.update({
  id: '/postsData',
  path: '/postsData',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsPageIndexRoute = PostsPageIndexRouteImport.update({
  id: '/postsPage/',
  path: '/postsPage/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsPagePostIdRoute = PostsPagePostIdRouteImport.update({
  id: '/postsPage/$postId',
  path: '/postsPage/$postId',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsDataIdRoute = PostsDataIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => PostsDataRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/postsData': typeof PostsDataRouteWithChildren
  '/postsData/$id': typeof PostsDataIdRoute
  '/postsPage/$postId': typeof PostsPagePostIdRoute
  '/postsPage': typeof PostsPageIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/postsData': typeof PostsDataRouteWithChildren
  '/postsData/$id': typeof PostsDataIdRoute
  '/postsPage/$postId': typeof PostsPagePostIdRoute
  '/postsPage': typeof PostsPageIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/postsData': typeof PostsDataRouteWithChildren
  '/postsData/$id': typeof PostsDataIdRoute
  '/postsPage/$postId': typeof PostsPagePostIdRoute
  '/postsPage/': typeof PostsPageIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/postsData'
    | '/postsData/$id'
    | '/postsPage/$postId'
    | '/postsPage'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/postsData'
    | '/postsData/$id'
    | '/postsPage/$postId'
    | '/postsPage'
  id:
    | '__root__'
    | '/'
    | '/postsData'
    | '/postsData/$id'
    | '/postsPage/$postId'
    | '/postsPage/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PostsDataRoute: typeof PostsDataRouteWithChildren
  PostsPagePostIdRoute: typeof PostsPagePostIdRoute
  PostsPageIndexRoute: typeof PostsPageIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/postsData': {
      id: '/postsData'
      path: '/postsData'
      fullPath: '/postsData'
      preLoaderRoute: typeof PostsDataRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/postsPage/': {
      id: '/postsPage/'
      path: '/postsPage'
      fullPath: '/postsPage'
      preLoaderRoute: typeof PostsPageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/postsPage/$postId': {
      id: '/postsPage/$postId'
      path: '/postsPage/$postId'
      fullPath: '/postsPage/$postId'
      preLoaderRoute: typeof PostsPagePostIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/postsData/$id': {
      id: '/postsData/$id'
      path: '/$id'
      fullPath: '/postsData/$id'
      preLoaderRoute: typeof PostsDataIdRouteImport
      parentRoute: typeof PostsDataRoute
    }
  }
}

interface PostsDataRouteChildren {
  PostsDataIdRoute: typeof PostsDataIdRoute
}

const PostsDataRouteChildren: PostsDataRouteChildren = {
  PostsDataIdRoute: PostsDataIdRoute,
}

const PostsDataRouteWithChildren = PostsDataRoute._addFileChildren(
  PostsDataRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PostsDataRoute: PostsDataRouteWithChildren,
  PostsPagePostIdRoute: PostsPagePostIdRoute,
  PostsPageIndexRoute: PostsPageIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
